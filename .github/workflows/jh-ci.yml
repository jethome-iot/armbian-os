name: CI JetHome Build Images

on:
  push:
  schedule:
    - cron: "30 3 * * *"
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: 'Release'
        options:
        - nightly
        - stable
      board:
        description: 'Board'
        required: false
        default: ''
      version:
        description: 'Version'
        required: false
        default: ''
      branch:
        descrioption: 'Branch'
        default: 'main-jethub'


concurrency: jh-ci-${{ github.ref }}

jobs:

  # In case we have a currently active build, cancel it
  Prepare:
    name: "Generate version"
    if: ${{ github.repository_owner == 'jethome-iot' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.releases.outputs.version}}
    steps:

      - name: "Cancel active workflow"
        if: false # temporaly disable cancel active build
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          all_but_latest: true
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Purge old releases of trunk build"
        uses: Vucko130/delete-older-releases@v0.2.2
        with:
          keep_latest: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Purge action workflow logs"
        uses: igorjs/gh-actions-clean-workflow@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          days_old: 10

      - name: "Get latest release version"
        id: releases
        run: |

          get_latest_release() {
            curl --silent "https://api.github.com/repos/$1/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/'
          }

          VER=$(echo $(get_latest_release "jethome-iot/armbian/os") | rev | cut -d'.' -f 1 | rev | sed 's/^0*//')
          PREFIX=$(echo $(curl https://raw.githubusercontent.com/jethome-iot/armbian-build/main-jethub/VERSION | sed "s/-trunk.*//"))
          RELE=$(printf "%04d\n" $((VER+1)))
          echo "version=${PREFIX}.${RELE}" >> $GITHUB_OUTPUT
          [[ -n "${{ inputs.version }}" ]] && echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT || true
          echo "version=${PREFIX}.${RELE}"
          [[ -n "${{ inputs.version }}" ]] && echo "version=${{ inputs.version }}" || true

  generaterelease:

    needs: [ Prepare ]
    if: ${{ github.repository_owner == 'jethome-iot' }}
    runs-on: ubuntu-latest
    name: "Generate ${{ inputs.release }} release"
    outputs:
      version: ${{steps.releases.outputs.version}}
    steps:

      - name: "Get latest release version"
        id: releases
        run: |

          echo "version=${{ needs.Prepare.outputs.version }}" >> $GITHUB_OUTPUT

      - run: |
          echo "Release: ${{ github.event.inputs.release }}"
          echo "Board: ${{ github.event.inputs.board }}"
          echo "Version: ${{ needs.Prepare.outputs.version }}"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: ncipollo/release-action@v1
        if: ${{ github.repository_owner == 'jethome-iot' && github.event.inputs.choice != 'stable'  && github.event.inputs.choice != 'rc' }}
        with:
          artifacts: "LICENSE"
          commit: "${{ inputs.branch == null && github.sha || inputs.buildbranch }}"
          tag: "${{ needs.Prepare.outputs.version }}"
          name: "Armbian ${{ needs.Prepare.outputs.version }}"
          bodyFile: ".github/Releases.md"
          allowUpdates: true
          removeArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
